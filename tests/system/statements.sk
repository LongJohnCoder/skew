test("
inline using bar = foo;
", "
<stdin>:1:8: error: Cannot use this statement here
inline using bar = foo;
       ~~~~~~~~~~~~~~~~
");

test("
if (true) class Foo {}
", "
<stdin>:1:11: error: Cannot use this statement here
if (true) class Foo {}
          ~~~~~~~~~~~~
");

test("
if (true) struct Foo {}
", "
<stdin>:1:11: error: Cannot use this statement here
if (true) struct Foo {}
          ~~~~~~~~~~~~~
");

test("
if (true) interface Foo {}
", "
<stdin>:1:11: error: Cannot use this statement here
if (true) interface Foo {}
          ~~~~~~~~~~~~~~~~
");

test("
void foo() { void bar() {} }
", "
<stdin>:1:14: error: Cannot use this statement here
void foo() { void bar() {} }
             ~~~~~~~~~~~~~
");

test("
class Foo {}
in Foo {
  int a = 0;
  int b, foo;
  static int c = 0;
  static int d;
}
", "
<stdin>:4:3: error: Cannot use this statement here
  int b, foo;
  ~~~~~
<stdin>:4:10: error: Cannot use this statement here
  int b, foo;
         ~~~~
");

test("
interface Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:3:3: error: Cannot use this statement here
  int a = 0;
  ~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  int b;
  ~~~~~~
");

test("
struct Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:3:3: error: Cannot use this statement here
  int a = 0;
  ~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  int b;
  ~~~~~~
");

test("
enum Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:3:3: error: Cannot use this statement here
  int a = 0;
  ~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  int b;
  ~~~~~~
");
