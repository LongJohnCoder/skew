test("
namespace ns {
  class Foo {}
}
Foo foo;
", "
<stdin>:4:1: error: \"Foo\" is not declared
Foo foo;
~~~
");

test("
namespace ns {
  using Foo = int;
}
ns.Foo foo;
", "
<stdin>:4:4: error: \"Foo\" is not declared on type \"ns\"
ns.Foo foo;
   ~~~
");

test("
namespace ns1 {
  using ns2;
}
namespace ns2 {
  class Foo {}
}
ns1.Foo foo;
", "
<stdin>:7:5: error: \"Foo\" is not declared on type \"ns1\"
ns1.Foo foo;
    ~~~
");

test("
int foo;
using foo;
", "
<stdin>:2:7: error: Expected a type here
using foo;
      ~~~
");

test("
using foo;
class foo {}
", "
<stdin>:1:7: error: Expected a namespace here
using foo;
      ~~~
");

test("
using foo;
namespace foo {}
", "
");

test("
namespace ns { int foo; }
using ns.foo;
", "
<stdin>:2:7: error: Expected a type here
using ns.foo;
      ~~~~~~
");

test("
using ns.Foo;
namespace ns { class Foo {} }
", "
<stdin>:1:7: error: Expected a namespace here
using ns.Foo;
      ~~~~~~
");

test("
using ns.foo;
namespace ns.foo {}
", "
");

test("
int foo;
using bar = foo;
", "
<stdin>:2:13: error: Unexpected expression of type \"int\"
using bar = foo;
            ~~~
");

test("
using bar = foo;
class foo {}
", "
");

test("
using bar = foo;
namespace foo { int x; }
bool y = bar.x;
", "
<stdin>:3:10: error: Cannot convert from type \"int\" to type \"bool\" without a cast
bool y = bar.x;
         ~~~~~
");

test("
namespace ns { int foo; }
using bar = ns.foo;
", "
<stdin>:2:13: error: Unexpected expression of type \"int\"
using bar = ns.foo;
            ~~~~~~
");

test("
using bar = ns.Foo;
namespace ns { class Foo {} }
bar Foo = 0;
", "
<stdin>:3:11: error: Cannot convert from type \"int\" to type \"ns.Foo\"
bar Foo = 0;
          ^
");

test("
using bar = ns.foo;
namespace ns.foo {}
", "
");

test("
Int foo = false;
using Int = int;
", "
<stdin>:1:11: error: Cannot convert from type \"bool\" to type \"int\" without a cast
Int foo = false;
          ~~~~~
");

test("
Callback foo = false;
using Callback = void fn();
", "
<stdin>:1:16: error: Cannot convert from type \"bool\" to type \"void fn()\"
Callback foo = false;
               ~~~~~
");

test("
namespace ns1 {
  Foo bar = 0;
  using Foo = ns2.Foo;
}
namespace ns2 {
  class Foo {}
}
", "
<stdin>:2:13: error: Cannot convert from type \"int\" to type \"ns2.Foo\"
  Foo bar = 0;
            ^
");

test("
using ns;
Foo foo = 0;
namespace ns {
  class Foo {}
}
", "
<stdin>:2:11: error: Cannot convert from type \"int\" to type \"ns.Foo\"
Foo foo = 0;
          ^
");

test("
using ns1;
using ns2;
Foo foo = 0;
namespace ns1 { class Foo {} }
namespace ns2 { class Foo {} }
", "
<stdin>:3:1: error: Reference to \"Foo\" is ambiguous, could be \"ns1.Foo\" or \"ns2.Foo\"
Foo foo = 0;
~~~
");

test("
using Foo = ns1.Foo;
using ns1;
using ns2;
Foo foo = 0;
namespace ns1 { class Foo {} }
namespace ns2 { class Foo {} }
", "
<stdin>:4:11: error: Cannot convert from type \"int\" to type \"ns1.Foo\"
Foo foo = 0;
          ^
");

test("
using ns1;
using ns2;
using ns3;
Foo foo = 0;
namespace ns1 { class Foo {} }
namespace ns2 { class Foo {} }
namespace ns3 { class Foo {} }
", "
<stdin>:4:1: error: Reference to \"Foo\" is ambiguous, could be \"ns1.Foo\" or \"ns2.Foo\" or \"ns3.Foo\"
Foo foo = 0;
~~~
");

test("
namespace ns {
  using ns;
  class Foo {}
  Foo foo = 0;
}
", "
<stdin>:4:13: error: Cannot convert from type \"int\" to type \"ns.Foo\"
  Foo foo = 0;
            ^
");

test("
namespace ns {
  using ns;
  Foo foo = 0;
}
namespace ns {
  class Foo {}
}
", "
<stdin>:3:13: error: Cannot convert from type \"int\" to type \"ns.Foo\"
  Foo foo = 0;
            ^
");

test("
namespace ns {
  class Foo {}
}
namespace ns {
  using ns;
  Foo foo = 0;
}
", "
<stdin>:6:13: error: Cannot convert from type \"int\" to type \"ns.Foo\"
  Foo foo = 0;
            ^
");

test("
namespace ns.foo { class Foo {} }
using ns;
foo.Foo bar = 0;
", "
<stdin>:3:1: error: \"foo\" is not declared
foo.Foo bar = 0;
~~~
");

test("
bar foo = false;
alias bar = int;
", "
<stdin>:1:11: error: Cannot convert from type \"bool\" to type \"int\" without a cast
bar foo = false;
          ~~~~~
");

test("
alias bar = int;
bar foo = false;
", "
<stdin>:2:11: error: Cannot convert from type \"bool\" to type \"int\" without a cast
bar foo = false;
          ~~~~~
");

test("
ns.bar foo = false;
namespace ns { alias bar = int; }
", "
<stdin>:1:14: error: Cannot convert from type \"bool\" to type \"int\" without a cast
ns.bar foo = false;
             ~~~~~
");

test("
namespace ns { alias bar = int; }
ns.bar foo = false;
", "
<stdin>:2:14: error: Cannot convert from type \"bool\" to type \"int\" without a cast
ns.bar foo = false;
             ~~~~~
");

test("
using Foo = void fn();
enum Bar {}
in Bar {
  string foo() {
    return toString();
  }
}
", "
");
