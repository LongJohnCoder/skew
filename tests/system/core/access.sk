namespace core { void testAccess() {

test("
class Foo {
  private int foo;
  int bar() { return foo + this.foo; }
}
class Bar : Foo {
  int baz() { return foo + this.foo; }
}
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
", "
<stdin>:6:22: error: Cannot access private symbol \"Foo.foo\" here
  int baz() { return foo + this.foo; }
                     ~~~
<stdin>:6:33: error: Cannot access private symbol \"Foo.foo\" here
  int baz() { return foo + this.foo; }
                                ~~~
<stdin>:8:40: error: Cannot access private symbol \"Foo.foo\" here
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
                                       ~~~
<stdin>:8:50: error: Cannot access private symbol \"Foo.foo\" here
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
                                                 ~~~
");

test("
class Foo {
  protected int foo;
  int bar() { return foo + this.foo; }
}
class Bar : Foo {
  int baz() { return foo + this.foo; }
}
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
", "
<stdin>:8:40: error: Cannot access protected symbol \"Foo.foo\" here
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
                                       ~~~
<stdin>:8:50: error: Cannot access protected symbol \"Foo.foo\" here
int foo(Foo foo, Bar bar) { return foo.foo + bar.foo; }
                                                 ~~~
");

test("
class Foo {
  int bar(Bar bar) { return bar.foo; }
}
class Bar : Foo {
  private int foo;
  int baz() { return foo + this.foo; }
}
class Baz : Foo {
  int baz(Bar bar) { return bar.foo; }
}
int foo(Bar bar) { return bar.foo; }
", "
<stdin>:2:33: error: Cannot access private symbol \"Bar.foo\" here
  int bar(Bar bar) { return bar.foo; }
                                ~~~
<stdin>:9:33: error: Cannot access private symbol \"Bar.foo\" here
  int baz(Bar bar) { return bar.foo; }
                                ~~~
<stdin>:11:31: error: Cannot access private symbol \"Bar.foo\" here
int foo(Bar bar) { return bar.foo; }
                              ~~~
");

test("
class Foo {
  int bar(Bar bar) { return bar.foo; }
}
class Bar : Foo {
  protected int foo;
  int baz() { return foo + this.foo; }
}
class Baz : Foo {
  int baz(Bar bar) { return bar.foo; }
}
int foo(Bar bar) { return bar.foo; }
", "
<stdin>:2:33: error: Cannot access protected symbol \"Bar.foo\" here
  int bar(Bar bar) { return bar.foo; }
                                ~~~
<stdin>:9:33: error: Cannot access protected symbol \"Bar.foo\" here
  int baz(Bar bar) { return bar.foo; }
                                ~~~
<stdin>:11:31: error: Cannot access protected symbol \"Bar.foo\" here
int foo(Bar bar) { return bar.foo; }
                              ~~~
");

test("
class Foo {
  private void foo() { foo(); }
}
class Bar : Foo {
  void bar() { foo(); this.foo(); }
}
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
", "
<stdin>:5:16: error: Cannot access private symbol \"Foo.foo\" here
  void bar() { foo(); this.foo(); }
               ~~~
<stdin>:5:28: error: Cannot access private symbol \"Foo.foo\" here
  void bar() { foo(); this.foo(); }
                           ~~~
<stdin>:7:34: error: Cannot access private symbol \"Foo.foo\" here
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
                                 ~~~
<stdin>:7:45: error: Cannot access private symbol \"Foo.foo\" here
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
                                            ~~~
");

test("
class Foo {
  protected void foo() { foo(); }
}
class Bar : Foo {
  void bar() { foo(); this.foo(); }
}
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
", "
<stdin>:7:34: error: Cannot access protected symbol \"Foo.foo\" here
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
                                 ~~~
<stdin>:7:45: error: Cannot access protected symbol \"Foo.foo\" here
void foo(Foo foo, Bar bar) { foo.foo(); bar.foo(); }
                                            ~~~
");

test("
class Foo {
  private pure new() {}
  static pure Foo create() { return Foo(); }
}
var foo = Foo();
var bar = Foo.create();
", "
<stdin>:5:11: error: Cannot access private symbol \"Foo.new\" here
var foo = Foo();
          ~~~
");

}}
