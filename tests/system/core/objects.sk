test("
class Foo {
  int foo;
  static int bar;
}
struct Bar {
  int foo;
  static int bar;
}
", "
<stdin>:6:7: error: Expected the \"final\" modifier on a variable declaration inside a struct
  int foo;
      ~~~
");

test("
class Foo<T> : T {}
", "
<stdin>:1:16: error: Base type \"T\" must be an interface
class Foo<T> : T {}
               ^
");

test("
struct Foo : Bar {}
struct Bar {}
", "
<stdin>:1:14: error: A struct cannot inherit from another type
struct Foo : Bar {}
             ~~~
");

test("
interface IFoo {}
class Foo : IFoo, Bar {}
class Bar {}
", "
<stdin>:2:19: error: Base type \"Bar\" must come first in a class declaration
class Foo : IFoo, Bar {}
                  ~~~
");

test("
class Foo : Bar {}
class Bar {}
", "
");

test("
interface IFoo : IBar {}
interface IBar {}
", "
");

test("
interface IFoo : Bar {}
struct Bar {}
", "
<stdin>:1:18: error: Base type \"Bar\" must be an interface
interface IFoo : Bar {}
                 ~~~
");

test("
interface IFoo : Bar {}
class Bar {}
", "
<stdin>:1:18: error: Base type \"Bar\" must be an interface
interface IFoo : Bar {}
                 ~~~
");

test("
class Foo : IFoo, IFoo {}
interface IFoo {}
", "
<stdin>:1:19: error: Duplicate base type \"IFoo\"
class Foo : IFoo, IFoo {}
                  ~~~~
");

test("
class Foo {}
in Foo : Bar {}
class Bar {}
", "
<stdin>:2:10: error: The base class must be set from the class declaration, not from an extension block
in Foo : Bar {}
         ~~~
");

test("
class Foo {}
in Foo : IFoo {}
in Foo : IFoo {}
interface IFoo {}
", "
<stdin>:3:10: error: Duplicate base type \"IFoo\"
in Foo : IFoo {}
         ~~~~
");

test("
class Foo : IBar {}
class Bar : Foo, IBar {}
interface IFoo {}
interface IBar : IFoo {}
", "
");

test("
class Foo : Bar {}
in Foo { class Bar {} }
", "
");

test("
interface A { void foo(); }
interface B { void foo(); }
interface C : A, B {}
int foo(C foo) { return foo.foo(); }
", "
<stdin>:4:25: error: Cannot convert from type \"void\" to type \"int\"
int foo(C foo) { return foo.foo(); }
                        ~~~~~~~~~
");

test("
void foo(C foo) { foo.foo(); }
interface C : A, B {}
interface A { void foo(); }
interface B { int foo(); }
", "
<stdin>:2:11: error: Member \"C.foo\" has an ambiguous inherited type, could be type \"void fn()\" or type \"int fn()\"
interface C : A, B {}
          ^
");

test("
interface G : C, F {}
void foo(G foo) { foo.foo(); }

interface A { void foo(); }
interface B { int foo(); }
interface C : A, B {}

interface D { bool foo(); }
interface E { float foo(); }
interface F : E, D {}
", "
<stdin>:6:11: error: Member \"C.foo\" has an ambiguous inherited type, could be type \"void fn()\" or type \"int fn()\"
interface C : A, B {}
          ^
<stdin>:10:11: error: Member \"F.foo\" has an ambiguous inherited type, could be type \"float fn()\" or type \"bool fn()\"
interface F : E, D {}
          ^
");

test("
void foo(G foo) { foo.foo(); }
interface G : C, F {}

interface A { int foo(); }
interface B { int foo(); }
interface C : A, B {}

interface D { bool foo(); }
interface E { bool foo(); }
interface F : E, D {}
", "
<stdin>:2:11: error: Member \"G.foo\" has an ambiguous inherited type, could be type \"int fn()\" or type \"bool fn()\"
interface G : C, F {}
          ^
");

test("
interface Foo { bool foo(); }
interface Bar { int foo(); }
interface Baz : Foo, Bar {}
", "
<stdin>:3:11: error: Member \"Baz.foo\" has an ambiguous inherited type, could be type \"bool fn()\" or type \"int fn()\"
interface Baz : Foo, Bar {}
          ~~~
");

test("
interface Foo {}
in Foo { namespace foo {} }
interface Bar {}
in Bar { int foo(); }
interface Baz : Foo, Bar {}
", "
<stdin>:5:11: error: Member \"Baz.foo\" has an ambiguous inherited type, could be type \"Foo.foo\" or type \"int fn()\"
interface Baz : Foo, Bar {}
          ~~~
");

test("
class Foo { void foo() {} }
class Bar : Foo { void foo() {} }
", "
<stdin>:2:24: error: \"foo\" overrides another symbol with the same name but is missing the \"override\" modifier
class Bar : Foo { void foo() {} }
                       ~~~
<stdin>:1:18: note: The overridden declaration is here
class Foo { void foo() {} }
                 ~~~
");

test("
class Foo { void foo() {} }
class Bar : Foo { override void foo() {} }
", "
<stdin>:2:33: error: \"foo\" cannot override a non-virtual method
class Bar : Foo { override void foo() {} }
                                ~~~
<stdin>:1:18: note: The overridden declaration is here
class Foo { void foo() {} }
                 ~~~
");

test("
class Foo { override void foo() {} }
class Bar : Foo { override void foo() {} }
", "
<stdin>:1:13: error: Cannot use the \"override\" modifier on a function that doesn't override anything
class Foo { override void foo() {} }
            ~~~~~~~~
");

test("
class Foo { virtual void foo() {} }
class Bar : Foo { virtual override void foo() {} }
", "
<stdin>:2:19: error: Redundant modifier \"virtual\" on an overriding function
class Bar : Foo { virtual override void foo() {} }
                  ~~~~~~~
");

test("
class Foo { virtual override void foo() {} }
class Bar : Foo { virtual void foo() {} }
", "
<stdin>:1:21: error: Cannot use the \"override\" modifier on a function that doesn't override anything
class Foo { virtual override void foo() {} }
                    ~~~~~~~~
<stdin>:2:32: error: \"foo\" overrides another symbol with the same name but is missing the \"override\" modifier
class Bar : Foo { virtual void foo() {} }
                               ~~~
<stdin>:1:35: note: The overridden declaration is here
class Foo { virtual override void foo() {} }
                                  ~~~
");

test("
class Foo { virtual void foo() {} }
class Bar : Foo { override void foo() {} }
", "
");

test("
class Foo { virtual void foo() {} }
class Bar : Foo { override void foo() {} }
class Baz : Bar { override void foo() {} }
", "
");

test("
interface IFoo { virtual void foo(); }
class Foo {}
in Foo { override void foo() {} }
in Foo : IFoo {}
", "
");

test("
class Foo { virtual void foo() {} }
class Bar : Foo { void foo() {} }
class Baz : Bar { override void foo() {} }
", "
<stdin>:2:24: error: \"foo\" overrides another symbol with the same name but is missing the \"override\" modifier
class Bar : Foo { void foo() {} }
                       ~~~
<stdin>:1:26: note: The overridden declaration is here
class Foo { virtual void foo() {} }
                         ~~~
");

test("
class Foo { void foo() {} }
class Bar : Foo { int foo() { return 0; } }
", "
<stdin>:2:23: error: \"foo\" must have the same signature as the method it overrides (expected type \"void fn()\" but found type \"int fn()\")
class Bar : Foo { int foo() { return 0; } }
                      ~~~
<stdin>:1:18: note: The overridden declaration is here
class Foo { void foo() {} }
                 ~~~
");

test("
class Foo { int foo; }
class Bar : Foo { int foo() { return 0; } }
", "
<stdin>:2:23: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { int foo() { return 0; } }
                      ~~~
<stdin>:1:17: note: The overridden declaration is here
class Foo { int foo; }
                ~~~
");

test("
class Foo {}
class Bar : Foo { int foo() { return 0; } }
in Foo { namespace foo {} }
", "
<stdin>:2:23: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { int foo() { return 0; } }
                      ~~~
<stdin>:3:20: note: The overridden declaration is here
in Foo { namespace foo {} }
                   ~~~
");

test("
class Foo { static virtual void foo() {} }
", "
<stdin>:1:20: error: Cannot use the \"virtual\" modifier on a non-instance function
class Foo { static virtual void foo() {} }
                   ~~~~~~~
");

test("
class Foo { void foo() {} }
class Bar : Foo { static void foo() {} }
", "
<stdin>:2:31: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { static void foo() {} }
                              ~~~
<stdin>:1:18: note: The overridden declaration is here
class Foo { void foo() {} }
                 ~~~
");

test("
class Foo { static void foo() {} }
class Bar : Foo { void foo() {} }
", "
<stdin>:2:24: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { void foo() {} }
                       ~~~
<stdin>:1:25: note: The overridden declaration is here
class Foo { static void foo() {} }
                        ~~~
");

test("
class Foo { static void foo() {} }
class Bar : Foo { static void foo() {} }
", "
<stdin>:2:31: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { static void foo() {} }
                              ~~~
<stdin>:1:25: note: The overridden declaration is here
class Foo { static void foo() {} }
                        ~~~
");

test("
class Foo { int foo; }
class Bar : Foo { int foo; }
", "
<stdin>:2:23: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { int foo; }
                      ~~~
<stdin>:1:17: note: The overridden declaration is here
class Foo { int foo; }
                ~~~
");

test("
class Foo { void foo() {} }
class Bar : Foo { int foo; }
", "
<stdin>:2:23: error: \"foo\" overrides another declaration with the same name in base type \"Foo\"
class Bar : Foo { int foo; }
                      ~~~
<stdin>:1:18: note: The overridden declaration is here
class Foo { void foo() {} }
                 ~~~
");

test("
virtual void foo() {}
override void bar() {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier outside an object declaration
virtual void foo() {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier outside an object declaration
override void bar() {}
~~~~~~~~
");

test("
virtual int foo;
override int bar;
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on a variable declaration
virtual int foo;
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on a variable declaration
override int bar;
~~~~~~~~
");

test("
virtual namespace foo {}
override namespace bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on a namespace declaration
virtual namespace foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on a namespace declaration
override namespace bar {}
~~~~~~~~
");

test("
virtual struct Foo {}
override struct Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on a struct declaration
virtual struct Foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on a struct declaration
override struct Bar {}
~~~~~~~~
");

test("
virtual class Foo {}
override class Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on a class declaration
virtual class Foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on a class declaration
override class Bar {}
~~~~~~~~
");

test("
virtual interface Foo {}
override interface Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on an interface declaration
virtual interface Foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on an interface declaration
override interface Bar {}
~~~~~~~~
");

test("
virtual enum Foo {}
override enum Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on an enum declaration
virtual enum Foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on an enum declaration
override enum Bar {}
~~~~~~~~
");

test("
virtual enum flags Foo {}
override enum flags Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on an enum declaration
virtual enum flags Foo {}
~~~~~~~
<stdin>:2:1: error: Cannot use the \"override\" modifier on an enum declaration
override enum flags Bar {}
~~~~~~~~
");

test("
class Foo {}
virtual in Foo {}
override in Bar {}
class Bar {}
", "
<stdin>:2:12: error: Cannot merge multiple declarations for \"Foo\" with different modifiers
virtual in Foo {}
           ~~~
<stdin>:1:7: note: The conflicting declaration is here
class Foo {}
      ~~~
<stdin>:4:7: error: Cannot merge multiple declarations for \"Bar\" with different modifiers
class Bar {}
      ~~~
<stdin>:3:13: note: The conflicting declaration is here
override in Bar {}
            ~~~
");

test("
virtual class Foo {}
virtual in Foo {}
override in Bar {}
override class Bar {}
", "
<stdin>:1:1: error: Cannot use the \"virtual\" modifier on a class declaration
virtual class Foo {}
~~~~~~~
<stdin>:3:1: error: Cannot use the \"override\" modifier on a class declaration
override in Bar {}
~~~~~~~~
");

test("
namespace foo {}
in foo : int {}
", "
<stdin>:2:10: error: A namespace cannot inherit from another type
in foo : int {}
         ~~~
");

test("
enum Foo {}
in Foo : int {}
", "
<stdin>:2:10: error: An enum cannot inherit from another type
in Foo : int {}
         ~~~
");

test("
class Foo {
  int foo;
  int bar = foo;
}
", "
<stdin>:3:13: error: Cannot access \"foo\" from a static context
  int bar = foo;
            ~~~
");

test("
class Foo {
  int foo;
  int fn() bar = () => foo;
}
", "
<stdin>:3:24: error: Cannot access \"foo\" from a static context
  int fn() bar = () => foo;
                       ~~~
");

test("
class Foo { bool foo; int bar; }
Foo foo = { 1, false };
", "
<stdin>:2:13: error: Cannot convert from type \"int\" to type \"bool\" without a cast
Foo foo = { 1, false };
            ^
<stdin>:2:16: error: Cannot convert from type \"bool\" to type \"int\" without a cast
Foo foo = { 1, false };
               ~~~~~
");

test("
class Foo { var foo; }
class Bar : Foo { int bar; }
Bar foo = {};
", "
<stdin>:1:17: error: Implicitly typed variables must be initialized
class Foo { var foo; }
                ~~~
");

test("
class Foo {}
in Foo { int foo() { return this; } }
", "
<stdin>:2:29: error: Cannot convert from type \"Foo\" to type \"int\"
in Foo { int foo() { return this; } }
                            ~~~~
");

test("
class Foo {}
in Bar : Baz {}
class Bar : Foo {}
interface Baz {}
Foo foo = Bar();
Bar bar = Bar();
Baz baz = Bar();
", "
");
