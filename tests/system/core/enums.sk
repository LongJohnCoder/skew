test("
int foo;
enum Foo { FOO = foo }
", "
<stdin>:2:18: error: Expected integer constant but found expression of type \"int\"
enum Foo { FOO = foo }
                 ~~~
");

test("
namespace foo {
  enum Foo { FOO = false }
}
", "
<stdin>:2:20: error: Cannot convert from type \"bool\" to type \"int\" without a cast
  enum Foo { FOO = false }
                   ~~~~~
");

test("
enum Foo { FOO }
enum flags Bar { FOO }
bool foo = Foo.FOO | Foo.FOO;
bool bar = Bar.FOO | Bar.FOO;
", "
<stdin>:3:12: error: Cannot convert from type \"int\" to type \"bool\" without a cast
bool foo = Foo.FOO | Foo.FOO;
           ~~~~~~~~~~~~~~~~~
<stdin>:4:12: error: Cannot convert from type \"Bar\" to type \"bool\" without a cast
bool bar = Bar.FOO | Bar.FOO;
           ~~~~~~~~~~~~~~~~~
");

test("
enum Foo { BAR, BAZ }
Foo x = true ? .BAR : .BAZ;
Foo y = .FOO;
int z = x == .FOO || .FOO == y;
", "
<stdin>:3:10: error: \"FOO\" is not declared on type \"Foo\"
Foo y = .FOO;
         ~~~
<stdin>:4:15: error: \"FOO\" is not declared on type \"Foo\"
int z = x == .FOO || .FOO == y;
              ~~~
<stdin>:4:23: error: \"FOO\" is not declared on type \"Foo\"
int z = x == .FOO || .FOO == y;
                      ~~~
");

test("
enum Foo { BAR }
Foo foo() { return .BAZ; }
Foo bar() { return .BAR; }
", "
<stdin>:2:21: error: \"BAZ\" is not declared on type \"Foo\"
Foo foo() { return .BAZ; }
                    ~~~
");

test("
Foo foo(bool foo, bool bar) {
  return foo ? .A : bar ? .B : .C;
}
enum Foo { A, B, C }
", "
");

test("
int foo(Foo foo, bool bar) {
  return foo == (bar ? .A : .B);
}
enum Foo { A, B, C }
", "
<stdin>:2:10: error: Cannot convert from type \"bool\" to type \"int\" without a cast
  return foo == (bar ? .A : .B);
         ~~~~~~~~~~~~~~~~~~~~~
");

test("
enum Foo {}
in Foo { int foo() { return this; } }
", "
");

test("
enum Foo { FOO }
in Foo { int foo; }
bool foo = Foo.FOO.foo;
", "
<stdin>:2:10: error: Cannot use this statement here
in Foo { int foo; }
         ~~~~~~~~
<stdin>:3:12: error: Cannot convert from type \"int\" to type \"bool\" without a cast
bool foo = Foo.FOO.foo;
           ~~~~~~~~~~~
");

test("
enum Foo { FOO }
in Foo { static int foo; }
bool foo = Foo.FOO.foo;
", "
<stdin>:3:20: error: Cannot access static member \"foo\" from an instance context
bool foo = Foo.FOO.foo;
                   ~~~
<stdin>:3:12: error: Cannot convert from type \"int\" to type \"bool\" without a cast
bool foo = Foo.FOO.foo;
           ~~~~~~~~~~~
");

test("
enum Foo { FOO }
in Foo { static int foo; }
bool foo = Foo.foo;
", "
<stdin>:3:12: error: Cannot convert from type \"int\" to type \"bool\" without a cast
bool foo = Foo.foo;
           ~~~~~~~
");
