namespace core { void testLambdas() {

test("
int fn(bool) foo = foo => foo;
int fn(bool) fn(float) bar = bar => bar => bar;
", "
<stdin>:1:27: error: Cannot convert from type \"bool\" to type \"int\" without a cast
int fn(bool) foo = foo => foo;
                          ~~~
<stdin>:2:44: error: Cannot convert from type \"bool\" to type \"int\" without a cast
int fn(bool) fn(float) bar = bar => bar => bar;
                                           ~~~
");

test("
void test() {
  foo => { foo; bar; };
}
", "
<stdin>:2:3: error: Expression has no type context here
  foo => { foo; bar; };
  ~~~~~~~~~~~~~~~~~~~~
<stdin>:2:17: error: \"bar\" is not declared
  foo => { foo; bar; };
                ~~~
");

test("
int foo = (=> false)();
", "
<stdin>:1:15: error: Cannot convert from type \"bool\" to type \"int\" without a cast
int foo = (=> false)();
              ~~~~~
");

test("
void test() {
  (int)(x => x)(false);
}
", "
<stdin>:2:14: error: Cannot convert from type \"bool\" to type \"int\" without a cast
  (int)(x => x)(false);
             ^
<stdin>:2:3: warning: Unused expression
  (int)(x => x)(false);
  ~~~~~~~~~~~~~~~~~~~~
");

test("
int fn() foo() {
  return => false;
}
", "
<stdin>:2:13: error: Cannot convert from type \"bool\" to type \"int\" without a cast
  return => false;
            ~~~~~
");

test("
var foo = =>
", "
<stdin>:1:13: error: Unexpected END_OF_FILE
var foo = =>
            ^
");

test("
void foo() {}
void fn() bar = () => foo();
", "
");

test("
void fn() bar = () => 0;
", "
<stdin>:1:23: warning: Unused expression
void fn() bar = () => 0;
                      ^
");

test("
void foo() {}
void fn() bar = () => { return foo(); };
", "
<stdin>:2:32: error: Unexpected expression of type \"void\"
void fn() bar = () => { return foo(); };
                               ~~~~~
");

test("
void fn() bar = () => { return 0; };
", "
<stdin>:1:32: error: Cannot convert from type \"int\" to type \"void\"
void fn() bar = () => { return 0; };
                               ^
");

test("
var a = =>;
var b = => {};
var c = => 100;
var d = => { return 100; return false; };
var e = => { return 1; return 0.5f; };
var f = => foo;
void test(bool x) {
  x = a;
  x = b;
  x = c;
  x = d;
  x = e;
  x = f;
}
", "
<stdin>:4:9: error: Could not infer return type of lambda expression
var d = => { return 100; return false; };
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:4:33: note: No common type for type \"int\" and type \"bool\"
var d = => { return 100; return false; };
                                ~~~~~
<stdin>:6:12: error: \"foo\" is not declared
var f = => foo;
           ~~~
<stdin>:8:7: error: Cannot convert from type \"void fn()\" to type \"bool\"
  x = a;
      ^
<stdin>:9:7: error: Cannot convert from type \"void fn()\" to type \"bool\"
  x = b;
      ^
<stdin>:10:7: error: Cannot convert from type \"int fn()\" to type \"bool\"
  x = c;
      ^
<stdin>:12:7: error: Cannot convert from type \"double fn()\" to type \"bool\"
  x = e;
      ^
");

test("
var foo = => foo;
", "
<stdin>:1:5: error: Cyclic declaration of \"foo\"
var foo = => foo;
    ~~~
");

}}
