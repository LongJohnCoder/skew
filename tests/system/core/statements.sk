namespace core { void testStatements() {

test("
return;
in Foo { return; }
class Foo { return; }
interface Baz { return; }
", "
<stdin>:1:1: error: Cannot use this statement here
return;
~~~~~~~
<stdin>:2:10: error: Cannot use this statement here
in Foo { return; }
         ~~~~~~~
<stdin>:3:13: error: Cannot use this statement here
class Foo { return; }
            ~~~~~~~
<stdin>:4:17: error: Cannot use this statement here
interface Baz { return; }
                ~~~~~~~
")

test("
bar foo = false;
inline alias bar = int;
", "
<stdin>:2:1: error: Cannot use the \"inline\" modifier on an alias declaration
inline alias bar = int;
~~~~~~
<stdin>:1:11: error: Cannot convert from type \"bool\" to type \"int\" without a cast
bar foo = false;
          ~~~~~
")

test("
void foo() { alias bar = int; }
", "
")

test("
if (true) class Foo {}
if (true) interface Foo {}
", "
<stdin>:1:1: error: Cannot use this statement here
if (true) class Foo {}
~~~~~~~~~~~~~~~~~~~~~~
<stdin>:1:11: error: Cannot use this statement here
if (true) class Foo {}
          ~~~~~~~~~~~~
<stdin>:2:1: error: Cannot use this statement here
if (true) interface Foo {}
~~~~~~~~~~~~~~~~~~~~~~~~~~
<stdin>:2:11: error: Cannot use this statement here
if (true) interface Foo {}
          ~~~~~~~~~~~~~~~~
")

test("
void test() {
  if (true) class Foo {}
  if (true) interface Foo {}
}
", "
<stdin>:2:13: error: Cannot use this statement here
  if (true) class Foo {}
            ~~~~~~~~~~~~
<stdin>:3:13: error: Cannot use this statement here
  if (true) interface Foo {}
            ~~~~~~~~~~~~~~~~
")

test("
void foo() { void foo(); }
void bar() { void bar() {} }
", "
<stdin>:1:14: error: Cannot use this statement here
void foo() { void foo(); }
             ~~~~~~~~~~~
<stdin>:1:19: error: Use the \"import\" modifier to import functions
void foo() { void foo(); }
                  ~~~
<stdin>:2:14: error: Cannot use this statement here
void bar() { void bar() {} }
             ~~~~~~~~~~~~~
")

test("
void foo() {
  class Foo {}
  interface Bar {}
}
", "
<stdin>:2:3: error: Cannot use this statement here
  class Foo {}
  ~~~~~~~~~~~~
<stdin>:3:3: error: Cannot use this statement here
  interface Bar {}
  ~~~~~~~~~~~~~~~~
")

test("
class Foo { int foo; }
interface Baz { int foo; }
", "
<stdin>:2:17: error: Cannot use this statement here
interface Baz { int foo; }
                ~~~~~~~~
")

test("
class Foo {}
in Foo {
  int a = 0;
  int b, foo;
  static int c = 0;
  static int d;
}
", "
<stdin>:4:7: error: Instance variables in extension blocks must be initialized
  int b, foo;
      ^
<stdin>:4:10: error: Instance variables in extension blocks must be initialized
  int b, foo;
         ~~~
")

test("
interface Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:3:3: error: Cannot use this statement here
  int a = 0;
  ~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  int b;
  ~~~~~~
")

test("
enum Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:3:3: error: Cannot use this statement here
  int a = 0;
  ~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  int b;
  ~~~~~~
")

test("
namespace Foo {}
in Foo {
  int a = 0;
  int b;
  static int c = 0;
  static int d;
}
", "
<stdin>:5:3: error: Cannot use the \"static\" modifier outside an object declaration
  static int c = 0;
  ~~~~~~
<stdin>:6:3: error: Cannot use the \"static\" modifier outside an object declaration
  static int d;
  ~~~~~~
")

test("
break; continue;
in Foo { break; continue; }
class Foo { break; continue; }
interface Baz { break; continue; }
void foo() { break; continue; }
", "
<stdin>:1:1: error: Cannot use this statement here
break; continue;
~~~~~~
<stdin>:1:8: error: Cannot use this statement here
break; continue;
       ~~~~~~~~~
<stdin>:2:10: error: Cannot use this statement here
in Foo { break; continue; }
         ~~~~~~
<stdin>:2:17: error: Cannot use this statement here
in Foo { break; continue; }
                ~~~~~~~~~
<stdin>:3:13: error: Cannot use this statement here
class Foo { break; continue; }
            ~~~~~~
<stdin>:3:20: error: Cannot use this statement here
class Foo { break; continue; }
                   ~~~~~~~~~
<stdin>:4:17: error: Cannot use this statement here
interface Baz { break; continue; }
                ~~~~~~
<stdin>:4:24: error: Cannot use this statement here
interface Baz { break; continue; }
                       ~~~~~~~~~
<stdin>:5:14: error: Cannot use this statement here
void foo() { break; continue; }
             ~~~~~~
<stdin>:5:21: error: Cannot use this statement here
void foo() { break; continue; }
                    ~~~~~~~~~
")

test("
void foo() {
  break;
  while (true) {
    break;
    continue;
  }
  continue;
}
", "
<stdin>:2:3: error: Cannot use this statement here
  break;
  ~~~~~~
<stdin>:7:3: error: Cannot use this statement here
  continue;
  ~~~~~~~~~
")

test("
break;
while (true) {
  break;
  while (true) {
    break;
    continue;
  }
  continue;
}
continue;
", "
<stdin>:1:1: error: Cannot use this statement here
break;
~~~~~~
<stdin>:2:1: error: Cannot use this statement here
while (true) {
~~~~~~~~~~~~~~
<stdin>:10:1: error: Cannot use this statement here
continue;
~~~~~~~~~
")

test("
class Foo {
  assert true;
  for (;;) {}
  if (false) {}
  while (false) {}
  do {} while (false);
  switch (0) {}
  0;
}
", "
<stdin>:2:3: error: Cannot use this statement here
  assert true;
  ~~~~~~~~~~~~
<stdin>:3:3: error: Cannot use this statement here
  for (;;) {}
  ~~~~~~~~~~~
<stdin>:4:3: error: Cannot use this statement here
  if (false) {}
  ~~~~~~~~~~~~~
<stdin>:5:3: error: Cannot use this statement here
  while (false) {}
  ~~~~~~~~~~~~~~~~
<stdin>:6:3: error: Cannot use this statement here
  do {} while (false);
  ~~~~~~~~~~~~~~~~~~~~
<stdin>:7:3: error: Cannot use this statement here
  switch (0) {}
  ~~~~~~~~~~~~~
<stdin>:8:3: error: Cannot use this statement here
  0;
  ~~
<stdin>:8:3: warning: Unused expression
  0;
  ^
")

test("
void foo() {}
void test() {
  foo;
  foo();
  1, 2;
  true ? 1 : 2;
}
", "
<stdin>:3:3: warning: Unused expression
  foo;
  ~~~
<stdin>:5:3: warning: Unused expression
  1, 2;
  ^
<stdin>:5:6: warning: Unused expression
  1, 2;
     ^
<stdin>:6:10: warning: Unused expression
  true ? 1 : 2;
         ^
<stdin>:6:14: warning: Unused expression
  true ? 1 : 2;
             ^
")

test("
void test() {
  int i;
  i++;
  --i;
  i = 1;
  i *= 2;
}
", "
")

test("
void foo() {
  enum Foo { FOO }
}
", "
<stdin>:2:3: error: Cannot use this statement here
  enum Foo { FOO }
  ~~~~~~~~~~~~~~~~
")

test("
class Foo {
enum Bar {}
in Bar {
  void foo() { toString(); }
}
", "
<stdin>:5:2: error: Expected RIGHT_BRACE but found END_OF_FILE
}
 ^
<stdin>:2:1: error: Cannot use this statement here
enum Bar {}
~~~~~~~~~~~
<stdin>:3:1: error: Cannot use this statement here
in Bar {
~~~~~~~~
")

test("
assert true;
assert const true;
", "
<stdin>:1:1: error: Cannot use this statement here
assert true;
~~~~~~~~~~~~
")

test("
void foo() {
  for (var a = 0, b = false; ; a++, a--) {}
  for (var a = 0, b = 0; ; a++, a--) {}
}
", "
<stdin>:2:8: error: All for loop variables must have the same type (\"a\" has type \"int\" but \"b\" has type \"bool\")
  for (var a = 0, b = false; ; a++, a--) {}
       ~~~~~~~~~~~~~~~~~~~~
")

}}
