testJS("
in Foo {}
class Foo {}
", "
function Foo() {
}
");

testJS("
class Foo {}
in Foo {}
", "
function Foo() {
}
");

testJS("
class Foo : Bar {}
class Bar {}
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Bar() {
}
function Foo() {
  Bar.call(this);
}
$extends(Foo, Bar);
");

testJS("
class Foo : Bar {}
class Bar { int x; }
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Bar(_0) {
  this.x = _0;
}
function Foo(_0) {
  Bar.call(this, _0);
}
$extends(Foo, Bar);
");

testJS("
class Foo : Bar { int y; }
class Bar {}
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Bar() {
}
function Foo(_0) {
  Bar.call(this);
  this.y = _0;
}
$extends(Foo, Bar);
");

testJS("
class Foo : Bar { int y; }
class Bar { int x; }
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Bar(_0) {
  this.x = _0;
}
function Foo(_0, _1) {
  Bar.call(this, _0);
  this.y = _1;
}
$extends(Foo, Bar);
");

testJS("
namespace ns {
  interface IFoo {}
  class Foo : IFoo {}
  struct Bar {}
  enum Baz { A, B, C }
}
", "
var ns = {};
ns.Foo = function() {
};
ns.Bar = function() {
};
ns.Baz = {
  A: 0,
  B: 1,
  C: 2
};
");

testJS("
import namespace ns {
  import interface IFoo {}
  import class Foo : IFoo {}
  import struct Bar {}
  import enum Baz { A, B, C }
}
", "
");

testJS("
class Foo {
  export void foo() {}
}
class Bar : Foo {}
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Foo() {
}
Foo.prototype.foo = function() {
};
function Bar() {
  Foo.call(this);
}
$extends(Bar, Foo);
");

testJS("
class Foo {
  int foo;
  new() {}
}
", "
function Foo() {
  this.foo = 0;
}
");

testJS("
import class Foo : Bar {
  new() {}
}
import class Bar {
  new() {}
}
var foo = Foo();
", "
var foo = new Foo();
");
