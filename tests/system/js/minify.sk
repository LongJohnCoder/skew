namespace js { void testMinify() {

testMinifyJS("
export void foo() {
  for (;;) {}
}
", "
(function(){foo=function(){for(;;);}}());
");

testMinifyJS("
export class Foo {}
in Foo {
  Foo foo = null;
  Foo bar = null;
}
", "
(function(){Foo=function(){this.a=this.b=null}}());
");

testMinifyJS("
export class Foo {}
in Foo {
  var xa = 0;
  var xb = false;
  var xc = 0;
  var xd = 0;
  var xe = 0;
  var xf = false;
  var xg = false;
  var xh = 0;
}
", "
(function(){Foo=function(){this.a=0,this.b=!1,this.c=this.d=this.e=0,this.f=this.g=!1,this.h=0}}());
");

testMinifyJS("
export int foo(StringMap<int> map) {
  return map.get(\"x\") + map.get(\"_\") + map.get(\"x\") + map.get(\"0\") + map.get(\"x0\") + map.get(\"if\");
}
", "
(function(){function b(){this.a=Object.create(null)}foo=function(a){return ((((a.a.x+a.a._|0)+a.a.x|0)+a.a['0']|0)+a.a.x0|0)+a.a['if']|0}}());
");

testMinifyJS("
export void foo(StringMap<int> map) {
  map.set(\"x\", 0);
  map.set(\"_\", 0);
  map.set(\"x\", 0);
  map.set(\"0\", 0);
  map.set(\"x0\", 0);
  map.set(\"if\", 0);
}
", "
(function(){function b(){this.a=Object.create(null)}foo=function(a){a.a.x=a.a._=a.a.x=a.a['0']=a.a.x0=a.a['if']=0}}());
");

testMinifyJS("
export void foo() {
  var map = StringMap<bool>();
  bool a;
  a = false;
  map.set(\"a\", false);
  a = true;
  map.set(\"a\", true);
}
", "
(function(){function c(){this.a=Object.create(null)}foo=function(){var a=new c(),b=!1;b=a.a.a=!1,b=a.a.a=!0}}());
");

testMinifyJS("
export void foo() {
  do {} while (true);
}
", "
(function(){foo=function(){do;while(!0)}}());
");

testMinifyJS("
import void x();
export void foo() {
  do { x(); } while (true);
}
", "
(function(){foo=function(){do x();while(!0)}}());
");

testMinifyJS("
import void x();
export void foo() {
  do { x(); break; } while (true);
}
", "
(function(){foo=function(){do{x();break}while(!0)}}());
");

testMinifyJS("
class Foo {
  int foo;
}
class Bar {
  int bar;
}
export int foo() {
  return Foo(100).foo + Bar(200).bar;
}
", "
(function(){function b(a){this.a=a}function c(a){this.a=a}foo=function(){return new b(100).a+new c(200).a|0}}());
");

testMinifyJS("
class Foo {
  int foo;
}
class Bar : Foo {
  int bar;
}
export int foo() {
  return Foo(100).foo + Bar(200, 300).foo;
}
", "
(function(){function $e(d,b){d.prototype=Object.create(b.prototype);d.prototype.constructor=d}function c(a){this.a=a}function d(a,b){c.call(this,a),this.b=b}$e(d,c);foo=function(){return new c(100).a+new d(200,300).a|0}}());
");

testMinifyJS("
import int a();
export int foo(int x) {
  return a() + x;
}
", "
(function(){foo=function(b){return a()+b|0}}());
");

testMinifyJS("
import namespace a {
  int b();
}
export int foo(int b) {
  return a.b() + b;
}
", "
(function(){foo=function(b){return a.b()+b|0}}());
");

testMinifyJS("
export void foo(int foo) { int bar, baz; }
export void bar(int foo, int bar) { int baz; }
export void baz(int foo, int bar, int baz) {}
", "
(function(){foo=function(a){var b=0,c=0};bar=function(a,b){var c=0};baz=function(a,b,c){}}());
");

testMinifyJS("
export int foo() {
  return `0` in 1;
}
", "
(function(){foo=function(){return 0 in 1}}());
");

testMinifyJS("
export int foo(int foo) {
  return foo + +1;
}
", "
(function(){foo=function(a){return a+1|0}}());
");

testMinifyJS("
export int foo(int foo) {
  return foo - -1;
}
", "
(function(){foo=function(a){return a+1|0}}());
");

testMinifyJS("
import void x();
export int foo() {
  x();
  return 1;
}
", "
(function(){foo=function(){return x(),1}}());
");

testMinifyJS("
import void x();
export int foo() {
  x();
  x();
  return 1;
}
", "
(function(){foo=function(){return x(),x(),1}}());
");

testMinifyJS("
export int foo(int foo) {
  if (foo < 0) return -1;
  else if (foo > 0) return 1;
  else return 0;
}
", "
(function(){foo=function(a){return a<0?-1:a>0?1:0}}());
");

testMinifyJS("
export int foo(int foo) {
  if (foo < 0) return -1;
  if (foo > 0) return 1;
  return 0;
}
", "
(function(){foo=function(a){return a<0?-1:a>0?1:0}}());
");

testMinifyJS("
import void y();
export int foo(int x) {
  if (x < 0) {
    y();
    return 1;
  }
  return 2;
}
", "
(function(){foo=function(a){return a<0?(y(),1):2}}());
");

testMinifyJS("
export int foo() {
  int foo;
  int bar;
  return foo + bar;
}
", "
(function(){foo=function(){var a=0,b=0;return a+b|0}}());
");

testMinifyJS("
const bool bar = false;
export int foo(int y) {
  if (y < 0) {
    return -y;
  } else if (bar) {
    return 100;
  }
  return y;
}
", "
(function(){foo=function(a){return a<0?-a|0:a}}());
");

testMinifyJS("
export int foo(int y) {
  if (y > 0) y++;
  else if (y < 0) y += 2;
  else y--;
  return y;
}
", "
(function(){foo=function(a){return a=(a>0?a+1:a<0?a+2:a-1)|0,a}}());
");

testMinifyJS("
export int foo(int x, int y) {
  if (x < 0) {
    x++;
    y--;
  } else if (y < 0) {
    x -= y;
  } else {
    x--;
    y++;
  }
  return y;
}
", "
(function(){foo=function(a,b){return a<0?(a=a+1|0,b=b-1|0):b<0?a=a-b|0:(a=a-1|0,b=b+1|0),b}}());
");

testMinifyJS("
export bool foo(int x, int y) {
  var bar = x == 0 && y != 0;
  if (x == 0 && y != 0) return true;
  else return bar;
}
", "
(function(){foo=function(a,b){var c=a===0&&b!==0;return !a&&b?!0:c}}());
");

testMinifyJS("
export bool foo(float x, double y) {
  var bar = x == 0 && y != 0;
  if (x == 0 && y != 0) return true;
  else return bar;
}
", "
(function(){foo=function(a,b){var c=a===0&&b!==0;return a===0&&b!==0?!0:c}}());
");

testMinifyJS("
import class Foo { Foo y(); }
import Foo x;
export bool foo() {
  var bar = x != null && x.y() == null;
  if (x != null && x.y() == null) return true;
  else return bar;
}
", "
(function(){foo=function(){var a=x!==null&&x.y()===null;return x&&!x.y()?!0:a}}());
");

testMinifyJS("
export bool foo(string x) {
  var bar = x == \"\" || x.slice(1, 2) == \"\";
  if (x == \"\" || x.slice(1, 2) == \"\") return true;
  else return bar;
}
", "
(function(){foo=function(a){var b=a===''||a.slice(1,2)==='';return !a||!a.slice(1,2)?!0:b}}());
");

testMinifyJS("
import bool x();
import void y();
export void foo() {
  if (x()) {
    y();
    if (x()) {
      y();
      if (x()) y();
    }
  }
}
", "
(function(){foo=function(){x()&&(y(),x()&&(y(),x()&&y()))}}());
");

testMinifyJS("
export int foo(int a, int b) {
  return a != b ? 1 : 2;
}
", "
(function(){foo=function(a,b){return a^b?1:2}}());
");

testMinifyJS("
import void b();
export void foo(bool a) {
  if (a) b();
}
", "
(function(){foo=function(a){a&&b()}}());
");

testMinifyJS("
import void b();
export void foo(bool a) {
  if (!a) b();
}
", "
(function(){foo=function(a){a||b()}}());
");

testMinifyJS("
import void b();
export int foo(bool a) {
  if (!a) {
    b();
    return 1;
  } else {
    return 2;
  }
}
", "
(function(){foo=function(a){return a?2:(b(),1)}}());
");

testMinifyJS("
export int foo(bool a) {
  return !a ? 1 : 2;
}
", "
(function(){foo=function(a){return a?2:1}}());
");

testMinifyJS("
import int y();
import int z();
export int foo(int x) {
  return x == 0 ? y() : z();
}
", "
(function(){foo=function(a){return a?z():y()}}());
");

testMinifyJS("
import void c();
import void d();
export void foo(Foo a, Foo b) {
  if (a == b) c();
  else d();
}
enum Foo {}
", "
(function(){foo=function(a,b){a^b?d():c()}}());
");

testMinifyJS("
export int foo(int x) {
  int y;
  switch (x) {
    case 1 { y = 1; }
    case 2 { y = 2; }
  }
  return y;
}
", "
(function(){foo=function(b){var a=0;switch(b){case 1:a=1;break;case 2:a=2}return a}}());
");

testMinifyJS("
export bool foo(int a) {
  return a >= 5 && a <= 8;
}
export bool bar(int a) {
  return 5 <= a && 8 >= a;
}
", "
(function(){foo=function(a){return a>4&&a<9};bar=function(a){return 4<a&&9>a}}());
");

testMinifyJS("
import void y();
export void foo(bool x) {
  if (x) {
    y();
    return;
  }
}
", "
(function(){foo=function(a){a&&y()}}());
");

testMinifyJS("
import void y();
export void foo(bool x) {
  if (x) return;
  y();
  y();
}
", "
(function(){foo=function(a){a||(y(),y())}}());
");

testMinifyJS("
import void y();
export void foo(bool x) {
  if (x) return;
  y();
  if (x) return;
  y();
}
", "
(function(){foo=function(a){a||(y(),a||y())}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  if (x) {
    if (y) return;
    z();
    z();
  }
}
", "
(function(){foo=function(a,b){a&&(b||(z(),z()))}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  if (x) {
    if (y) return;
    z();
    z();
  }
  z();
}
", "
(function(){foo=function(a,b){if(a){if(b)return;z(),z()}z()}}());
");

testMinifyJS("
import void y();
export void foo(bool x) {
  if (x) {
    y();
    return;
  }
  y();
  y();
}
", "
(function(){foo=function(a){a?y():(y(),y())}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) {
      z();
      continue;
    }
  }
}
", "
(function(){foo=function(a,b){while(a)b&&z()}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) return;
    z();
    z();
  }
}
", "
(function(){foo=function(a,b){while(a){if(b)return;z(),z()}}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) continue;
    z();
    z();
  }
}
", "
(function(){foo=function(a,b){while(a)b||(z(),z())}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) continue;
    z();
    if (y) continue;
    z();
  }
}
", "
(function(){foo=function(b,a){while(b)a||(z(),a||z())}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) {
      z();
      if (y) continue;
      z();
      z();
    }
  }
}
", "
(function(){foo=function(b,a){while(b)a&&(z(),a||(z(),z()))}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) {
      z();
      if (y) continue;
      z();
      z();
    }
    z();
  }
}
", "
(function(){foo=function(b,a){while(b){if(a){z();if(a)continue;z(),z()}z()}}}());
");

testMinifyJS("
import void z();
export void foo(bool x, bool y) {
  while (x) {
    if (y) {
      z();
      continue;
    }
    z();
    z();
  }
}
", "
(function(){foo=function(a,b){while(a)b?z():(z(),z())}}());
");

testMinifyJS("
class Foo {
  int foo = 0;
}
export void foo() {
  Foo().foo++;
  Foo().foo++;
}
", "
(function(){function c(){this.a=0}foo=function(){var a;a=new c(),a.a=a.a+1|0;var b;b=new c(),b.a=b.a+1|0}}());
");

testMinifyJS("
export int foo(int a, int b) { return a * b; }
", "
(function(){var $i=Math.imul||function(a,b){var ah=a>>>16,al=a&65535,bh=b>>>16,bl=b&65535;return al*bl+(ah*bl+al*bh<<16)|0};foo=function(a,b){return $i(a,b)}}());
");

testMinifyJS("
class Foo {
  virtual void foo() {}
}
class Bar : Foo {
  override void foo() {}
}
class Baz : Foo {
  override void foo() {}
}
export void test() {
  Bar().foo();
}
", "
(function(){function $e(d,b){d.prototype=Object.create(b.prototype);d.prototype.constructor=d}function b(){}function c(){b.call(this)}$e(c,b);c.prototype.a=function(){};test=function(){new c().a()}}());
");

testMinifyJS("
interface IFoo {
  virtual void foo();
}
class Bar : IFoo {
  override void foo() {}
}
class Baz : IFoo {
  override void foo() {}
}
export void test() {
  ((IFoo)Bar()).foo();
}
", "
(function(){function c(){}c.prototype.a=function(){};test=function(){new c().a()}}());
");

testMinifyJS("
import void bar(int foo);
export void foo() {
  var n = 10;
  for (var i = 0; i < n; i++) {
    bar(i);
  }
}
", "
(function(){foo=function(){for(var b=10,a=0;a<b;a=a+1|0)bar(a)}}());
");

testMinifyJS("
export List<double> foo(float x) {
  return [
    - -x,
    x - -2,
    x - -2.0,
    x - -2.5,
    x - -2.0f,
    x - -2.5f,
    x - -math.INFINITY,
  ];
}
", "
(function(){foo=function(a){return [- -a,a- -2,a- -2,a- -2.5,a- -2,a- -2.5,a- -Infinity]}}());
");

testMinifyJS("
import void bar();
export void foo(int x) {
  switch (x) {
    case 0 {}
    default { bar(); }
  }
}
", "
(function(){foo=function(a){switch(a){case 0:break;default:bar()}}}());
");

testMinifyJS("
export void foo(int x) {
  switch (x) {
    case 0 {}
    default {}
  }
}
", "
(function(){foo=function(a){}}());
");

testMinifyJS("
import int bar();
export void foo() {
  switch (bar()) {
    case 0 {}
    default {}
  }
}
", "
(function(){foo=function(){bar()}}());
");

testMinifyJS("
import void bar();
export void foo(int x) {
  switch (x) {
    case 0 { bar(); }
    default {}
  }
}
", "
(function(){foo=function(a){switch(a){case 0:bar()}}}());
");

testMinifyJS("
import bool bar();
import bool baz();
export bool foo() {
  if (bar()) return true;
  if (baz()) return true;
  return false;
}
", "
(function(){foo=function(){return bar()||baz()?!0:!1}}());
");

testMinifyJS("
export bool foo(bool bar, bool baz) {
  if (bar) return true;
  if (baz) return true;
  return false;
}
", "
(function(){foo=function(a,b){return a||b?!0:!1}}());
");

testMinifyJS("
export bool foo(bool bar, bool baz) {
  if (bar) return true;
  if (baz) return true;
  return true;
}
", "
(function(){foo=function(a,b){return !0}}());
");

testMinifyJS("
import bool bar();
import bool baz();
export bool foo() {
  if (bar()) return true;
  if (baz()) return true;
  return true;
}
", "
(function(){foo=function(){return bar()?!0:(baz(),!0)}}());
");

testMinifyJS("
export List<int> foo(int x) {
  return [
    x + 0,
    0 + x,

    x + -2,
    2 + -x,
    -x + 2,
    -2 + x,

    x + 1 + 2,
    x + 1 - 2,
    x - 1 + 2,
    x - 1 - 2,

    1 + x + 2,
    1 + x - 2,
    1 - x + 2,
    1 - x - 2,

    1 + 2 + x,
    1 + 2 - x,
    1 - 2 + x,
    1 - 2 - x,
  ];
}
", "
(function(){foo=function(a){return [a,a,a-2|0,2-a|0,2-a|0,a-2|0,a+3|0,a-1|0,a+1|0,a-3|0,3+a|0,a-1|0,3-a|0,-1-a|0,3+a|0,3-a|0,a-1|0,-1-a|0]}}());
");

}}
