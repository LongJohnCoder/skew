namespace js { void statements() {

testJS("
import int foo;
", "
");

testJS("
int foo = 0;
void fn() bar = =>;
class Foo {}
class Bar : Foo {}
", "
");

testJS("
class Foo {}
class Bar : Foo {
  export void foo() {}
}
", "
function $extends(derived, base) {
  derived.prototype = Object.create(base.prototype);
  derived.prototype.constructor = derived;
}
function Foo() {
}
function Bar() {
  Foo.call(this);
}
$extends(Bar, Foo);
Bar.prototype.foo = function() {
};
");

testJS("
enum Foo { A, B, C }
export Foo foo() { return .A; }
export Foo bar() { return .C; }
", "
var Foo = {
  A: 0,
  C: 2
};
function foo() {
  return Foo.A;
}
function bar() {
  return Foo.C;
}
");

}}
