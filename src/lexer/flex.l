%%

[ \t\r\n]+                    WHITESPACE;
[/][/].*                      WHITESPACE;

"if"                          IF;
"else"                        ELSE;
"while"                       WHILE;
"do"                          DO;
"for"                         FOR;
"continue"                    CONTINUE;
"break"                       BREAK;
"default"                     DEFAULT;
"switch"                      SWITCH;
"case"                        CASE;
"return"                      RETURN;
"class"                       CLASS;
"struct"                      STRUCT;
"enum"                        ENUM;
"interface"                   INTERFACE;
"namespace"                   NAMESPACE;
"using"                       USING;
"true"                        TRUE;
"false"                       FALSE;
"null"                        NULL;
"this"                        THIS;
"super"                       SUPER;
"new"                         NEW;
"is"                          IS;
"as"                          AS;
"in"                          IN;
"final"                       FINAL;
"static"                      STATIC;
"import"                      IMPORT;
"export"                      EXPORT;
"virtual"                     VIRTUAL;
"override"                    OVERRIDE;
"assert"                      ASSERT;

"("                           LEFT_PARENTHESIS;
")"                           RIGHT_PARENTHESIS;
"{"                           LEFT_BRACE;
"}"                           RIGHT_BRACE;
"["                           LEFT_BRACKET;
"]"                           RIGHT_BRACKET;
"."                           DOT;
"~"                           TILDE;
","                           COMMA;
";"                           SEMICOLON;
"?"                           QUESTION_MARK;
":"                           COLON;
"++"                          INCREMENT;
"--"                          DECREMENT;
"&&"                          LOGICAL_AND;
"||"                          LOGICAL_OR;
"+="                          ASSIGN_PLUS;
"-="                          ASSIGN_MINUS;
"*="                          ASSIGN_MULTIPLY;
"/="                          ASSIGN_DIVIDE;
"%="                          ASSIGN_REMAINDER;
"&="                          ASSIGN_BITWISE_AND;
"|="                          ASSIGN_BITWISE_OR;
"^="                          ASSIGN_BITWISE_XOR;
">>="                         ASSIGN_SHIFT_LEFT;
"<<="                         ASSIGN_SHIFT_RIGHT;
"+"                           PLUS;
"-"                           MINUS;
"*"                           MULTIPLY;
"/"                           DIVIDE;
"%"                           REMAINDER;
"&"                           BITWISE_AND;
"|"                           BITWISE_OR;
"^"                           BITWISE_XOR;
">>"                          SHIFT_RIGHT;
"<<"                          SHIFT_LEFT;
"!="                          NOT_EQUAL;
"=="                          EQUAL;
"<="                          LESS_THAN_OR_EQUAL;
">="                          GREATER_THAN_OR_EQUAL;
"<"                           LESS_THAN;
">"                           GREATER_THAN;
"!"                           NOT;
"="                           ASSIGN;

['](\\.|[^\\'])*[']           CHARACTER;
["](\\.|[^\\"])*["]           STRING;
[A-Za-z_][A-Za-z0-9_]*        IDENTIFIER;
[0-9]+\.[0-9]+f               FLOAT;
[0-9]+\.[0-9]+                DOUBLE;
0b[0-1]+                      INT_BINARY;
0o[0-7]+                      INT_OCTAL;
0x[A-Fa-f0-9]+                INT_HEX;
[0-9]+f                       FLOAT;
[0-9]+                        INT_DECIMAL;
