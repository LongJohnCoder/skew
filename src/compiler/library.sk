final var NATIVE_LIBRARY = "
import struct int { string toString(); }
import struct bool { string toString(); }
import struct float { string toString(); }
import struct double { string toString(); }

import struct String {
  static string fromCharCode(int value);
}

import struct string {
  final int length;
  string slice(int start, int end);
  int indexOf(string value);
  int lastIndexOf(string value);
  string toLowerCase();
  string toUpperCase();
  static string fromCodeUnit(int value) { return String.fromCharCode(value); }
  inline string get(int index) { return untyped(this)[index]; }
  inline string join(List<string> values) { return untyped(values).join(this); }
  inline int codeUnitAt(int index) { return untyped(this).charCodeAt(index); }
  inline string append(string value) { return untyped(this) + value; }
}

import class List<T> {
  new();
  final int length;
  void push(T value);
  void unshift(T value);
  List<T> slice(int start, int end);
  int indexOf(T value);
  int lastIndexOf(T value);
  T shift();
  T pop();
  void reverse();
  void sort(int fn(T, T) callback);
  inline List<T> clone() { return untyped(this).slice(); }
  inline T remove(int index) { return untyped(this).splice(index, 1)[0]; }
  inline void insert(int index, T value) { untyped(this).splice(index, 0, value); }
  inline T get(int index) { return untyped(this)[index]; }
  inline void set(int index, T value) { untyped(this)[index] = value; }
}

import class StringMap<T> {
  new();
  T get(string key);
  T getOrDefault(string key, T defaultValue);
  void set(string key, T value);
  bool has(string key);
  List<string> keys();
  List<T> values();
  StringMap<T> clone();
}

import class IntMap<T> {
  new();
  T get(int key);
  T getOrDefault(int key, T defaultValue);
  void set(int key, T value);
  bool has(int key);
  List<int> keys();
  List<T> values();
  IntMap<T> clone();
}

// TODO: Rename this to \"math\" since namespaces should be lower case
import namespace Math {
  final double E;
  final double PI;
  final double NAN;
  final double INFINITY;
  double random();
  double abs(double n);
  double sin(double n);
  double cos(double n);
  double tan(double n);
  double asin(double n);
  double acos(double n);
  double atan(double n);
  double round(double n);
  double floor(double n);
  double ceil(double n);
  double exp(double n);
  double log(double n);
  double sqrt(double n);
  bool isNaN(double n);
  bool isFinite(double n);
  double atan2(double y, double x);
  double pow(double base, double exponent);
  double min(double a, double b);
  double max(double a, double b);
  int imin(int a, int b);
  int imax(int a, int b);
}

// TODO: Remove this
import class StringBuilder {
  new();
  StringBuilder append(string text);
  string toString();
}
";
